docker ps 找到zk进程
dicker exec -it 进程号 /bin/bash
进入bin目录
    验证运行状况:zkServer.sh status
    运行客户端 ：zkCli.sh -server localhost:2181

特点：
    1 集群:1个leader 多个Follower
    2 集群中只要有半数以上节点存活,zk集群就能正常服务  #大于半数才行 eg:4挂2不行
    3 全局数据一致 每个server保存一份相同的数据副本,client无论连接到哪个Server,数据都是一致的
        #是否存在备份过多数据过大的问题 不存在,因为存储的数据是一些核心的配置之类的数据,并不存储数据
    4 更新请求顺序执行,来自同一个Client的请求按其发送顺序依次执行
    5 数据更新的原子性,一次数据更新要么全部成功,要么全部失败
    6 实时性,在一定时间范围内,客户端能读到最新的数据  #(时间范围短[因为数据非常小(一些核心数据)])

数据结构:
    树形结构(与Unix文件系统类似)
    每个节点称作ZNode,默认存储1MB数据,每个ZNode都可以通过其路径唯一标识


应用场景:
    0 统一命名服务
            www.baidu.com  -- ｜
                              ｜-----服务地址(ip)1
                              ｜-----服务地址(ip)2
                              ｜-----服务地址(ip)3
                              ｜-----服务地址(ip)4

    1 节点状态 绑定在ZNode上 其他服务监听这个节点 一旦状态发生改变就通知其他节点
    2 统一配置管理(分布式场景下同步配置信息)  绑定在ZNode 客户端做监听
    3 服务其动态上下线 服务启动时去注册(创建的都是临时节点)   客户端获取当前在线服务列表,并且注册监听 服务列表发生变化 客户端会收到通知
        订单服务(客户端监听) -- ｜
                             ｜-----服务1(上线或下线)
                             ｜-----服务2(上线或下线)
                             ｜-----服务3(上线或下线)
                             ｜-----服务4(上线或下线)
    4 软负载均衡
        zk中记录每台服务器的访问数,让访问数最少的服务器去处理最新的客户端请求
