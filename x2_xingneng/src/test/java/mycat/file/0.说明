数据库的瓶颈:
    连接:无法连接(连接过多)
    速度:读取操作速度变慢
    存储:

优化:
    1.sql与索引
    2.表(表设计上),存储引擎(存储引擎的选择)
    3.架构优化(集群/分库分表)
        主从(冗余设计):来实现高可用  读写分离
        分片(将完成的数据拆分成不同部分):分散存储和访问压力 分布到不同节点
    4.配置优化:连接数/缓冲区
    5.os:硬件

    1->5 成本上升 效果微小 #硬件升级(向上扩展)  分库分表(水平扩展)

分库分表的时机:阿里 500w

架构演进:单体->应用拆分(数据库没拆,压力大)->数据库拆分

雪花算法 生成主键 自增不重复