
==================================  可见性   ====================================
可见性是什么：
    硬件层面
        volatile->lock(实现缓存锁[不同的处理器方式不同,所以不直接使用内存屏障])->相当于cpu的内存屏障
        内存屏障指令：强制将storebuffer中的数据刷新会主内存 解决了可见性问题 相当于Fulture的get()方法
            分类:读屏障(读到最新),写屏障(写之前要同步所有storebuffer的数据到主内存),全屏障(读+写)
                # load barrier / store barrier / full barrier
            #storebuffer会有可能会存在短暂的数据不一致问题 #更新数据等待结果存在阻塞造成的性能问题所以出现了storebuffer来处理更新后的数据 异步操作可能会出现延迟
            storebuffer可以视作 cpu乱序执->重排序->导致可见性问题的原因
    JMM层面