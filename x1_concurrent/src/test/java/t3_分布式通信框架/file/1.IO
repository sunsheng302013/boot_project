====================================  阻塞非阻塞(参照IO) ===========================================

    阻塞和非阻塞是进程在访问数据的时候数据有没有准备就绪的处理方式
        阻塞:
            需要等待缓冲区中的数据准备好过后才处理其他事情
        非阻塞:
            进程访问数据缓冲区的时候,数据没有准备好直接返回,不等待;如果数据准备好,直接返回数据


    ======================********** IO流程:
    Input(读进来)/OutPut(写出去) 相对于内存而言(内存是读取双方直接先接触的东西后续才会有持久化什么的【个人理解】)

    网络/磁盘-->机器内存-->jvm内存-->其他操作(read()/write())
        read() input   accept()阻塞
                       轮询(selector->从缓冲区轮询)/事件通知 非阻塞



====================================  同步异步(参照时间点) ===========================================
    在处理数据时，在同一事件点能否做多个处理


====================================  IO模型 ===========================================
BIO(Block-IO)     同步阻塞IO
NIO(Non-Block-IO) 同步(轮询只能轮询一个)非阻塞(对数据就绪状态的反应) #轮询用线程池做也可以实现AIO
AIO(Ansync-IO)    异步(事件驱动回调通知就绪状态)非阻塞


===================================代码实现
NIO 轮询器(大堂经理) 缓冲区(等候区)
AIO

